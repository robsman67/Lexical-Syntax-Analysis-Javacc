/* Generated By:JavaCC: Do not edit this line. BasicParserConstants.java */
package fr.utbm.info.da53.lw2.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface BasicParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CR = 5;
  /** RegularExpression Id. */
  int PRINT = 6;
  /** RegularExpression Id. */
  int GOTO = 7;
  /** RegularExpression Id. */
  int INPUT = 8;
  /** RegularExpression Id. */
  int LET = 9;
  /** RegularExpression Id. */
  int RETURN = 10;
  /** RegularExpression Id. */
  int GOSUB = 11;
  /** RegularExpression Id. */
  int END = 12;
  /** RegularExpression Id. */
  int IF = 13;
  /** RegularExpression Id. */
  int THEN = 14;
  /** RegularExpression Id. */
  int ELSE = 15;
  /** RegularExpression Id. */
  int WHILE = 16;
  /** RegularExpression Id. */
  int FOR = 17;
  /** RegularExpression Id. */
  int TO = 18;
  /** RegularExpression Id. */
  int STEP = 19;
  /** RegularExpression Id. */
  int NEXT = 20;
  /** RegularExpression Id. */
  int DO = 21;
  /** RegularExpression Id. */
  int WEND = 22;
  /** RegularExpression Id. */
  int NUMBER = 23;
  /** RegularExpression Id. */
  int OPEN_PARENT = 24;
  /** RegularExpression Id. */
  int CLOSE_PARENT = 25;
  /** RegularExpression Id. */
  int DIFF = 26;
  /** RegularExpression Id. */
  int EQ = 27;
  /** RegularExpression Id. */
  int LE = 28;
  /** RegularExpression Id. */
  int GE = 29;
  /** RegularExpression Id. */
  int LT = 30;
  /** RegularExpression Id. */
  int GT = 31;
  /** RegularExpression Id. */
  int PLUS = 32;
  /** RegularExpression Id. */
  int MINUS = 33;
  /** RegularExpression Id. */
  int MULTIPLY = 34;
  /** RegularExpression Id. */
  int DIVIDE = 35;
  /** RegularExpression Id. */
  int AND = 36;
  /** RegularExpression Id. */
  int OR = 37;
  /** RegularExpression Id. */
  int XOR = 38;
  /** RegularExpression Id. */
  int NOT = 39;
  /** RegularExpression Id. */
  int FALSE = 40;
  /** RegularExpression Id. */
  int TRUE = 41;
  /** RegularExpression Id. */
  int STRING = 42;
  /** RegularExpression Id. */
  int UNDEF = 43;
  /** RegularExpression Id. */
  int IDENTIFIER = 44;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "<token of kind 4>",
    "\"\\n\"",
    "\"print\"",
    "\"goto\"",
    "\"input\"",
    "\"let\"",
    "\"return\"",
    "\"gosub\"",
    "\"end\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"while\"",
    "\"for\"",
    "\"to\"",
    "\"step\"",
    "\"next\"",
    "\"do\"",
    "\"wend\"",
    "<NUMBER>",
    "\"(\"",
    "\")\"",
    "\"<>\"",
    "\"=\"",
    "\"<=\"",
    "\">=\"",
    "\"<\"",
    "\">\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"and\"",
    "\"or\"",
    "\"xor\"",
    "\"not\"",
    "\"false\"",
    "\"true\"",
    "<STRING>",
    "\"undef\"",
    "<IDENTIFIER>",
  };

}
